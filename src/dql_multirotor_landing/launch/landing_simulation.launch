<?xml version="1.0"?>
<launch>
	<!-- Argomenti generali -->
	<arg name="paused" default="false" />
	<arg name="use_sim_time" default="true" />
	<arg name="gui" default="true" />
	<arg name="headless" default="false" />
	<arg name="debug" default="false" />
	<arg name="world_name" default="basic" />
	<arg name="mav_name" default="hummingbird" />
	<arg name="drone_name" default="$(arg mav_name)" />
	<arg name="roboID" default="0" />
	<!-- Parametri per il drone (ulteriori argomenti) -->
	<arg name="enable_meshes" default="true" />
	<arg name="enable_wind" default="true" />
	<arg name="enable_physics" default="true" />
	<arg name="enable_sensors" default="true" />
	<arg name="enable_logging" default="false" />
	<arg name="enable_ground_truth" default="true" />
	<arg name="enable_mavlink_interface" default="false" />
	<arg name="log_file" default="$(arg mav_name)_$(arg drone_name)" />
	<arg name="wait_to_record_bag" default="false" />
	<arg name="verbose" default="true" />

	<arg name="ros_port" default="11311" />
	<arg name="gaz_port" default="11351" />
	<arg name="ros_ip" default="localhost" />
	<env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models" />
	<env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models" />
	<!-- Impostazioni per Gazebo -->
	<!--
	<env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models" />
	<env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models" />
	-->
	<!-- Includi il mondo di Gazebo -->
	<env name="ROS_IP" value="$(arg ros_ip)" />
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find dql_multirotor_landing)/worlds/$(arg world_name).world" />
		<arg name="debug" value="$(arg debug)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="verbose" value="$(arg verbose)" />
	</include>
	<!-- Spawn del modello della moving platform -->
	<param name="robot_description" textfile="$(find dql_multirotor_landing)/urdf/moving_platform.urdf" />
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-z 1.0 -unpause -urdf -model moving_platform -param robot_description" respawn="false" output="screen" />
	<rosparam command="load" file="$(find dql_multirotor_landing)/config/moving_platform_joints.yaml" ns="moving_platform" />
	<!-- Includi il file di launch per il drone (ad esempio, per la simulazione del drone) -->
	<group ns="$(arg drone_name)">
		<include file="$(find dql_multirotor_landing)/launch/drone_and_controllers.launch">
			<arg name="mav_name" value="$(arg mav_name)" />
			<arg name="drone_name" value="$(arg drone_name)" />
			<arg name="roboID" value="$(arg roboID)" />
			<arg name="enable_meshes" value="$(arg enable_meshes)" />
			<arg name="enable_wind" value="$(arg enable_wind)" />
			<arg name="enable_physics" value="$(arg enable_physics)" />
			<arg name="enable_sensors" value="$(arg enable_sensors)" />
			<arg name="enable_logging" value="$(arg enable_logging)" />
			<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
			<arg name="enable_mavlink_interface" value="$(arg enable_mavlink_interface)" />
			<arg name="world_name" value="$(arg world_name)" />
			<arg name="debug" value="$(arg debug)" />
			<arg name="gui" value="$(arg gui)" />
			<arg name="paused" value="$(arg paused)" />
			<arg name="log_file" value="$(arg log_file)" />
			<arg name="wait_to_record_bag" value="$(arg wait_to_record_bag)" />
			<arg name="verbose" value="$(arg verbose)" />
			<arg name="X" value="0.0" />
			<arg name="Y" value="2.0" />
			<arg name="Z" value="0.02" />
		</include>
	</group>
	<!-- Infine, lancia il nodo unificato. Importante: questo deve essere l'ultimo nodo lanciato. -->
	<group ns="$(arg drone_name)">
		<node name="manager_node" pkg="dql_multirotor_landing" type="manager_node.py" output="screen">
			<param name="publish_rate_hz" value="100" />
			<param name="noise_pos_sd" value="0" />
			<param name="noise_vel_sd" value="0" />
			<param name="drone_name" value="$(arg drone_name)" />
			<!-- Parametri specifici per la moving platform (nella nuova struttura, questi verranno usati dal nodo unificato) -->
			<param name="moving_platform/trajectory_type" value="rpm" />
			<!-- eight, rpm -->
			<param name="moving_platform/t_x" value="1.6" />
			<param name="moving_platform/frequency" value="100" />
			<param name="moving_platform/r_x" value="2" />
			<param name="moving_platform/start_position/x" value="0" />
			<param name="moving_platform/start_position/y" value="0" />
			<param name="moving_platform/start_position/z" value="0.0" />
			<param name="moving_platform/start_orientation/phi" value="0" />
			<param name="moving_platform/start_orientation/theta" value="0" />
			<param name="moving_platform/start_orientation/psi" value="0" />
			<param name="moving_platform/t_y" value="0.0" />
			<param name="moving_platform/r_y" value="2" />
		</node>
	</group>
</launch>
